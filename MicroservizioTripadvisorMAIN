package main

import (
    "context"
    "fmt"
    "log"
    "net/http"
    "os"

    "github.com/gin-gonic/gin"
    "github.com/jackc/pgx/v4"
)

var db *pgx.Conn

func main() {
    var err error
    db, err = pgx.Connect(context.Background(), os.Getenv("DATABASE_URL"))
    if err != nil {
        log.Fatalf("Unable to connect to database: %v\n", err)
    }
    defer db.Close(context.Background())

    router := gin.Default()
    router.GET("/best-destinations", getBestDestinations)

    if err := router.Run(":8080"); err != nil {
        log.Fatalf("Failed to run server: %v\n", err)
    }
}

func getBestDestinations(c *gin.Context) {
    destinations, err := fetchBestDestinations()
    if err != nil {
        c.JSON(http.StatusInternalServerError, gin.H{"error": "Failed to fetch destinations"})
        return
    }
    c.JSON(http.StatusOK, gin.H{"destinations": destinations})
}
